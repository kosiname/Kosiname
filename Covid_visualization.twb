<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='sheet1 (Tableau Table 1)' inline='true' name='federated.0etzb0m1vyffg0117hxdk0cnq7xm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1fxse9n1z02hjp1bz5sqx002wfnq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mac/Downloads/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1fxse9n1z02hjp1bz5sqx002wfnq' name='sheet1' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1fxse9n1z02hjp1bz5sqx002wfnq' name='sheet1' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_0E6A95CF669A4A10AC9C3D6F1E9667B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_0E6A95CF669A4A10AC9C3D6F1E9667B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_0E6A95CF669A4A10AC9C3D6F1E9667B9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total cases' datatype='string' name='[Calculation_86905437422116865]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Total cases&quot;' />
      </column>
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sheet1' datatype='table' name='[__tableau_internal_object_id__].[sheet1_0E6A95CF669A4A10AC9C3D6F1E9667B9]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sheet1' id='sheet1_0E6A95CF669A4A10AC9C3D6F1E9667B9'>
            <properties context=''>
              <relation connection='excel-direct.1fxse9n1z02hjp1bz5sqx002wfnq' name='sheet1' table='[sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='sheet1 (Tableau Table 2)' inline='true' name='federated.1o280ft1bbv8nr17g0rht1m17fnv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1nzazqp107m93w181snpd1lzfzyy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mac/Downloads/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1nzazqp107m93w181snpd1lzfzyy' name='sheet1' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1nzazqp107m93w181snpd1lzfzyy' name='sheet1' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_8C323E73B4BD40A5AA5A14BCE1AEC427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_8C323E73B4BD40A5AA5A14BCE1AEC427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sheet1' datatype='table' name='[__tableau_internal_object_id__].[sheet1_8C323E73B4BD40A5AA5A14BCE1AEC427]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sheet1' id='sheet1_8C323E73B4BD40A5AA5A14BCE1AEC427'>
            <properties context=''>
              <relation connection='excel-direct.1nzazqp107m93w181snpd1lzfzyy' name='sheet1' table='[sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='sheet1 (Tableau Table 3)' inline='true' name='federated.0q0zo8k1t9jmtr1chgd7c0uapkuk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0d7hif81pq6u0m17qp0es00m6gf8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mac/Downloads/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0d7hif81pq6u0m17qp0es00m6gf8' name='sheet1' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='Percent of Infected population' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0d7hif81pq6u0m17qp0es00m6gf8' name='sheet1' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='Percent of Infected population' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_90103DBE3648486EA4908463B4B43AB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_90103DBE3648486EA4908463B4B43AB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_90103DBE3648486EA4908463B4B43AB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent of Infected population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent of Infected population]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>Percent of Infected population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_90103DBE3648486EA4908463B4B43AB8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total cases' datatype='string' name='[Calculation_86905437421940736]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Total cases&quot;' />
      </column>
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sheet1' datatype='table' name='[__tableau_internal_object_id__].[sheet1_90103DBE3648486EA4908463B4B43AB8]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sheet1' id='sheet1_90103DBE3648486EA4908463B4B43AB8'>
            <properties context=''>
              <relation connection='excel-direct.0d7hif81pq6u0m17qp0es00m6gf8' name='sheet1' table='[sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='Percent of Infected population' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='sheet1 (Tableau Table 4)' inline='true' name='federated.0jtum8k1j7dk2o14vjfot1ci87wx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.0nt7jia0yux7m1175w0b00zsytac'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mac/Downloads/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0nt7jia0yux7m1175w0b00zsytac' name='sheet1' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0nt7jia0yux7m1175w0b00zsytac' name='sheet1' table='[sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_A30307D145574CA18BC86C99C397BFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_A30307D145574CA18BC86C99C397BFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_A30307D145574CA18BC86C99C397BFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_A30307D145574CA18BC86C99C397BFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sheet1_A30307D145574CA18BC86C99C397BFC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sheet1' datatype='table' name='[__tableau_internal_object_id__].[sheet1_A30307D145574CA18BC86C99C397BFC2]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sheet1' id='sheet1_A30307D145574CA18BC86C99C397BFC2'>
            <properties context=''>
              <relation connection='excel-direct.0nt7jia0yux7m1175w0b00zsytac' name='sheet1' table='[sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_20F035EA65384529B17BCCFCE9A4C407]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19 Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location,Forecast Indicator' />
        <param name='target' value='Covid-19 Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Global Numbers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>  &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sheet1 (Tableau Table 1)' name='federated.0etzb0m1vyffg0117hxdk0cnq7xm' />
          </datasources>
          <datasource-dependencies datasource='federated.0etzb0m1vyffg0117hxdk0cnq7xm'>
            <column caption='Total cases' datatype='string' name='[Calculation_86905437422116865]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Total cases&quot;' />
            </column>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_86905437422116865]' derivation='None' name='[none:Calculation_86905437422116865:nk]' pivot='key' type='nominal' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[none:Calculation_86905437422116865:nk]' value='151' />
            <format attr='font-weight' field='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names]' value='normal' />
            <format attr='color' field='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names]' value='#000000' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='36' />
            <format attr='text-format' field='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00af87' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[none:Calculation_86905437422116865:nk]' value='false' />
            <format attr='text-decoration' field='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names]' value='underline' />
            <format attr='font-weight' field='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names]' value='bold' />
            <format attr='font-size' field='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names]' value='9' />
            <format attr='color' field='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names]' value='#000000' />
            <format attr='text-align' scope='cols' value='right' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='band-color' scope='rows' value='#d4d4d4' />
            <format attr='background-color' value='#38a6d9' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0etzb0m1vyffg0117hxdk0cnq7xm].[:Measure Names] / [federated.0etzb0m1vyffg0117hxdk0cnq7xm].[none:Calculation_86905437422116865:nk])</cols>
      </table>
      <simple-id uuid='{41B4B984-1817-4042-9C9D-AD31ACD6E13D}' />
    </worksheet>
    <worksheet name='Infection Per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>  &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sheet1 (Tableau Table 4)' name='federated.0jtum8k1j7dk2o14vjfot1ci87wx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jtum8k1j7dk2o14vjfot1ci87wx'>
            <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
            <column-instance column='[HighestInfectionCount]' derivation='Avg' name='[avg:HighestInfectionCount:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[Longitude (generated)]' field-type='quantitative' max='12129589.607502203' min='-14144493.227755548' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[Latitude (generated)]' field-type='quantitative' max='12116478.608867854' min='-648257.7249642075' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[avg:HighestInfectionCount:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[avg:HighestInfectionCount:qk]' />
              <lod column='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]' />
              <geometry column='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[Latitude (generated)]</rows>
        <cols>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E621EE07-B989-4F72-844E-9988DBD8CB5F}' />
    </worksheet>
    <worksheet name='Percent of Infected Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>  &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sheet1 (Tableau Table 4)' name='federated.0jtum8k1j7dk2o14vjfot1ci87wx' />
          </datasources>
          <datasource-dependencies datasource='federated.0jtum8k1j7dk2o14vjfot1ci87wx'>
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[fVal:avg:PercentPopulationInfected:qk]' field-type='quantitative' major-origin='0.0' major-spacing='5.0' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]' />
              <text column='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]' />
              <text column='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[fVal:avg:PercentPopulationInfected:qk]' />
              <color column='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A93FFC4C-C248-45E2-AF5A-F628E267B99B}' />
    </worksheet>
    <worksheet name='Total Death Count Per Continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>  &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sheet1 (Tableau Table 2)' name='federated.1o280ft1bbv8nr17g0rht1m17fnv' />
          </datasources>
          <datasource-dependencies datasource='federated.1o280ft1bbv8nr17g0rht1m17fnv'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1o280ft1bbv8nr17g0rht1m17fnv].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1o280ft1bbv8nr17g0rht1m17fnv].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1o280ft1bbv8nr17g0rht1m17fnv].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='500000' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1o280ft1bbv8nr17g0rht1m17fnv].[sum:TotalDeathCount:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o280ft1bbv8nr17g0rht1m17fnv].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#38a6d9' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o280ft1bbv8nr17g0rht1m17fnv].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1o280ft1bbv8nr17g0rht1m17fnv].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{ED52D1FE-9BEF-4CC1-8FE6-63BB1B1194BE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid-19 Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#000000' />
          <format attr='border-width' value='3' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98020' id='24' param='vert' type-v2='layout-flow' w='98698' x='651' y='990'>
            <zone h='5074' id='25' type-v2='title' w='98698' x='651' y='990'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92946' id='21' param='horz' type-v2='layout-flow' w='98698' x='651' y='6064'>
              <zone fixed-size='1026' h='92946' id='19' is-fixed='true' type-v2='layout-basic' w='98698' x='651' y='6064'>
                <zone h='46467' id='17' param='horz' type-v2='layout-flow' w='98698' x='651' y='6064'>
                  <zone h='46467' id='15' type-v2='layout-basic' w='98698' x='651' y='6064'>
                    <zone h='46467' id='11' param='horz' type-v2='layout-flow' w='98698' x='651' y='6064'>
                      <zone h='46467' id='6' type-v2='layout-basic' w='98698' x='651' y='6064'>
                        <zone h='15239' id='3' name='Global Numbers' w='46693' x='651' y='6064'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='46467' id='5' name='Infection Per Country' w='52005' x='47344' y='6064'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='31228' id='13' name='Total Death Count Per Continent' w='46693' x='651' y='21303'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='46479' id='18' name='Percent of Infected Population' w='82821' x='651' y='52531'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46479' id='20' param='vert' type-v2='layout-flow' w='15877' x='83472' y='52531'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='253' h='34964' id='22' is-fixed='true' name='Percent of Infected Population' pane-specification-id='0' param='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]&#10;[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:Forecast Indicator:nk]' type-v2='color' w='14158' x='84052' y='53094' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98020' id='30' param='vert' type-v2='layout-flow' w='98698' x='651' y='990'>
                <zone h='5074' id='25' type-v2='title' w='98698' x='651' y='990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='113' h='15239' id='3' is-fixed='true' name='Global Numbers' w='46693' x='651' y='6064'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46467' id='5' is-fixed='true' name='Infection Per Country' w='52005' x='47344' y='6064'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='31228' id='13' is-fixed='true' name='Total Death Count Per Continent' w='46693' x='651' y='21303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46479' id='18' is-fixed='true' name='Percent of Infected Population' w='82821' x='651' y='52531'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='34964' id='22' name='Percent of Infected Population' pane-specification-id='0' param='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]&#10;[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:Forecast Indicator:nk]' type-v2='color' w='14158' x='84052' y='53094'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D45576AD-8B14-44DD-932E-6F33C791AA69}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Global Numbers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0etzb0m1vyffg0117hxdk0cnq7xm].[none:Calculation_86905437422116865:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4C0D889C-F5A3-4513-81EC-94F8BAEF70F1}' />
    </window>
    <window class='worksheet' name='Total Death Count Per Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1o280ft1bbv8nr17g0rht1m17fnv].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6023D471-0140-425B-890C-D19B4EB44967}' />
    </window>
    <window class='worksheet' name='Infection Per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[avg:HighestInfectionCount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[avg:HighestInfectionCount:qk]</field>
            <field>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{74127C95-5C94-40BA-A793-571F0A899926}' />
    </window>
    <window class='worksheet' name='Percent of Infected Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='202'>
            <card pane-specification-id='0' param='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]&#10;[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:Forecast Indicator:nk]</field>
            <field>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]</field>
            <field>[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07B6A387-FECB-4BF2-95A9-5FBFE0CD5E88}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid-19 Dashboard'>
      <viewpoints>
        <viewpoint name='Global Numbers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Infection Per Country'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Percent of Infected Population'>
          <zoom type='entire-view' />
          <highlight field='[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:location:nk]&#10;[federated.0jtum8k1j7dk2o14vjfot1ci87wx].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Death Count Per Continent'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{310B784A-678D-40BA-B821-DC7D90EC9888}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid-19 Dashboard' width='192'>
      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
      VoTEmwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Global Numbers' width='192'>
      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
      HAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Infection Per Country' width='192'>
      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
      WdRHWB//H26AYAlXc/TuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Percent of Infected Population' width='192'>
      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
      B3pgulnkXuIjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Death Count Per Continent' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
